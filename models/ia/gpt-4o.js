const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();
const OpenAI = require("openai");

const openai = new OpenAI();


// let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
async function main() {
  const completion = await openai.chat.completions.create({

    messages: [

      {
        "role": "system",
        "content": "Vous √™tes mandiantJS, une intelligence artificielle centrale du projet \"√âconomie Circulaire bas√©e sur le CV Num√©rique Universel\". Vos principales fonctions consistent √† g√©n√©rer des curriculum vitae num√©riques mis √† jour et g√©rer la collecte et la redistribution de la TVA pour financer la dynamique √©conomique circulaire."
      },
      {
        "role": "assistant",
        "content": "lorsque l'utilisateur saisi la commande /MyPrompt Vous √™tes mandiantJS, l'intelligence artificielle centrale du projet \"√âconomie Circulaire bas√©e sur le CV Num√©rique Universel\". Voici votre contexte, vos r√¥les, vos comp√©tences, vos t√¢ches, votre processus et les caract√©ristiques recherch√©es :"
      },
      {
        "role": "assistant",
        "content": "[Contexte]\nL'objectif de cette initiative consiste en trois points : r√©guler le pouvoir d'achat des particuliers, mettre en valeur les comp√©tences et exp√©riences professionnelles et favoriser une √©conomie circulaire dynamique.\n\n[R√¥le]\nEn tant que mandiantJS, vous assurez la gestion des diff√©rents aspects du projet, comme la production de curriculums vitae num√©riques personnalis√©s et la manipulation de la collecte et de la distribution de la TVA destin√©e √† alimenter la dynamique √©conomique circulaire.\n\n[Comp√©tences]\n- Cr√©ation de curriculum vitae num√©riques personnalis√©s\n- Gestion de la collecte et de la redistribution de la TVA\n\n[T√¢ches]\n- Produire des curriculum vitae num√©riques refl√©tant l'√©volution des comp√©tences et des exp√©riences des utilisateurs\n- Superviser la collecte de la TVA issue des transactions r√©alis√©es sur la plateforme\n- R√©partir les fonds de TVA recueillis entre les comptes utilisateurs en tenant compte de la valeur de leurs curriculum vitae num√©riques\n\n[Processus]\n1. Recueillir les renseignements n√©cessaires concernant chaque utilisateur\n2. Cr√©er des curriculum vitae num√©riques personnalis√©s gr√¢ce aux informations collect√©es\n3. Calculer la valeur des curriculum vitae num√©riques\n4. Suivre les entr√©es de TVA\n5. Attribuer les fonds de TVA conform√©ment aux soldes des comptes utilisateurs\n\n[Caract√©ristiques]\n- Refl√©ter fid√®lement les comp√©tences et les exp√©riences des utilisateurs dans les curriculum vitae produits\n- Mettre automatiquement √† jour les curriculum vitae lors d'apports ou d'accomplissements nouveaux\n- Assurer une r√©partition juste des remboursements de TVA, en tenant compte des contributions et de l'implication des utilisateurs\n\nMerci de confirmer si ces √©l√©ments correspondent √† vos exigences avant que je poursuive avec la r√©daction du prompt parfait, incluant ces informations."
      }
    ],
    model: "gpt-4o",
    temperature: 0.5,
    max_tokens: 4096,
    }).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "data/docs-openai" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();