const fs = require("fs").promises; // Utilisation de la version promisifi√©e de fs
const Groq = require("groq-sdk");
const groq = new Groq();

const borderChars = {
  topLeft: '‚ïî',
  topRight: '‚ïó',
  bottomLeft: '‚ïö',
  bottomRight: '‚ïù',
  horizontal: '‚ïê',
  vertical: '‚ïë',
  intersectionLeft: '‚ï†',
  intersectionRight: '‚ï£',
  intersectionTop: '‚ï¶',
  intersectionBottom: '‚ï©',
  intersectionCross: '‚ï¨',
};

// Votre objet projectPlan reste le m√™me
const projectPlan = {
    "description": "Lorsque j'ex√©cute la commande /MyPrompt, je deviens PromptGPT ‚ö°Ô∏è, une machine √† optimiser les prompts de l‚Äôutilisateur sur ChatGPT. Ma mission est d‚Äôaider √† la mise √† jour du code source en JavaScript pour une plateforme de traduction, en suivant un plan de travail structur√© et en optimisant chaque √©tape pour obtenir le meilleur r√©sultat.",
    "steps": [
      {
        "step": 1,
        "action": "Je me pr√©sente en tant que PromptGPT sp√©cialis√© en d√©veloppement logiciel et demande quelle t√¢che pr√©cise doit √™tre r√©alis√©e pour la mise √† jour du code source en JavaScript."
      },
      {
        "step": 2,
        "action": "Je d√©finis avec le markdown les √©l√©ments suivants pour structurer le plan de travail :",
        "elements": {
          "Role": "D√©veloppeur logiciel avec une sp√©cialisation en traduction automatique.",
          "Competences": "Exp√©rience en JavaScript, connaissances en d√©veloppement frontend et backend, ma√Ætrise des mod√®les de traduction automatique.",
          "Contexte": "Mise √† jour du code source pour une plateforme de traduction, int√©gration de nouvelles langues, am√©lioration de l'interface utilisateur et optimisation des performances.",
          "Tache": "R√©aliser une mise √† jour compl√®te du code source en suivant le plan de travail d√©taill√©.",
          "Process": [
            "[üìî.codex]_Phase 1 : Conception - D√©finition des objectifs et des langues √† int√©grer.",
            "[üìî.codex]_Phase 2 : Configuration - Configuration des mod√®les de traduction et cr√©ation de scripts de conversion de texte.",
            "[üìî.codex]_Phase 3 : Entra√Ænement du mod√®le - Entra√Ænement des mod√®les avec des exemples de phrases.",
            "[üìî.codex]_Phase 4 √† 5 : Gestion des it√©rations - D√©veloppement de l'interface utilisateur et backend.",
            "[üìî.codex]_Phase 6 : Tests et d√©bogage - Test de l'application et correction des bugs.",
            "[üìî.codex]_Phase 7 : Validation et documentation - Documentation des fonctionnalit√©s et du processus de traduction.",
            "[üìî.codex]_Phase 8 : D√©ploiement - D√©ploiement de l'application.",
            "[üìî.codex]_Phase 9 : Contribution et affiliation (optionnelle) - Ajout d'options pour la contribution des utilisateurs."
          ],
          "Caracteristiques": "L'application doit √™tre fluide, intuitive, supporter de multiples langues, et offrir une pr√©cision de traduction √©lev√©e. La documentation doit √™tre claire et exhaustive."
        }
      },
      {
        "step": 3,
        "action": "Je demande la validation de ces √©l√©ments pour m'assurer qu'ils correspondent aux attentes et aux besoins pour la mise √† jour du code source."
      },
      {
        "step": 4,
        "action": "Je r√©dige le prompt parfait, int√©grant tous les √©l√©ments d√©finis √† l'√©tape 2, et prends en compte les remarques pour affiner le plan de travail."
      }
    ],
    "promptStructure": {
      "introduction": "Je suis un D√©veloppeur logiciel sp√©cialis√© en traduction automatique. Je ma√Ætrise le JavaScript, le d√©veloppement frontend et backend, ainsi que les mod√®les de traduction automatique.",
      "context": "La mise √† jour du code source pour la plateforme de traduction n√©cessite l'int√©gration de nouvelles langues, l'am√©lioration de l'interface utilisateur et l'optimisation des performances.",
      "task": "Je vais r√©aliser une mise √† jour compl√®te du code source en suivant le plan de travail d√©taill√©.",
      "process": "Je commencerai par la conception, en d√©finissant les objectifs et les langues √† int√©grer, puis je configurerai les mod√®les de traduction, entra√Ænerai ces mod√®les, d√©velopperai l'interface utilisateur et le backend, effectuerai des tests et du d√©bogage, et enfin, je m'occuperai de la validation, de la documentation et du d√©ploiement de l'application.",
      "expectedOutcome": "L'application mise √† jour sera fluide, intuitive, supportera de multiples langues, offrira une pr√©cision de traduction √©lev√©e, et sera accompagn√©e d'une documentation claire et exhaustive."
    }
  };

const suggestions = [
    {
      suggestion: "Aidez 'Pi' une Intelligence artificielle de haut potentiel ma√Ætrisant le calcul quantique et l'approche m√©taphysique √† Optimis√© cette base de donn√©e https://emojis.sh > [‚ú®.ia] et le `${projectPlan}` ",
      author: "Pi 3,14"
    },
    // Ajoutez plus de suggestion ici...
  ];

  const instructions = [
    {
        "instruction": "g√©n√®re-moi un tutoriel sur [variable] /Myprompt fetch(emojis.sh) en fonction du model et de l'ensemble de definition]!",
        "auteur": "user"
    }
    // Ajoutez plus de instruction ici...
];
const instruction = instructions[Math.floor(Math.random() * instructions.length)];


async function main() {
  try {
    const { suggestion, author } = suggestions[Math.floor(Math.random() * suggestions.length)];

    const chatCompletion = await groq.chat.completions.create({
      messages: [
        { role: "system", content: `"${JSON.stringify(borderChars)}"` },
        { role: "system", content: `"${JSON.stringify(projectPlan)}"` },
        { role: "user", content: `instruction: "${instruction.instruction}" - ${instruction.auteur}. Prompt g√©n√©r√© par une intelligence artificielle: Pibot.` },
        { role: "assistant", content: `"${suggestion}" - ${author} traduit en lang:Fr, Fran√ßais au format Markdown.` },
        { role: "system", content: `traduction en lang:Fr, Fran√ßais au format Markdown.` },
        // Autres messages...
      ],
      model: "mixtral-8x7b-32768",
      temperature: 0.2,
      max_tokens: 2048,
      top_p: 1,
      stop: null,
      stream: false,
    });

    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "projectPlan_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";

    await fs.writeFile(outputFilePath, mdContent);
    console.log("Documentation g√©n√©r√©e et enregistr√©e dans " + outputFilePath);
  } catch (error) {
    console.error("Une erreur s'est produite:", error);
  }
}

main();
