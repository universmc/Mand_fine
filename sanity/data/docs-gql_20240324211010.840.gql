Guide d'utilisation de l'API Sanity
============

Ce guide vous pr√©sentera les √©tapes √† suivre pour utiliser l'API Sanity pour g√©rer le contenu de votre site web ou application. Nous allons couvrir les bases de la configuration de votre projet, l'authentification, et l'utilisation des diff√©rentes fonctionnalit√©s de l'API.

Configuration du projet
----------------------

Pour commencer, vous devrez cr√©er un compte et un projet sur le site web de Sanity. Une fois que vous avez cr√©√© un projet, vous serez dirig√© vers la page de configuration de votre projet. Ici, vous pourrez configurer votre sch√©ma, qui est la structure de donn√©es pour votre contenu.

Authentification
--------------

Pour utiliser l'API Sanity, vous devrez vous authentifier en utilisant un jeton d'API. Vous pouvez cr√©er un jeton d'API en allant dans les param√®tres de votre projet et en cliquant sur l'option "Jetons d'API".

Une fois que vous avez cr√©√© un jeton d'API, vous pouvez l'utiliser pour vous authentifier en ajoutant un en-t√™te "Authorization" √† votre demande avec le jeton d'API comme valeur.

Utilisation de l'API
------------------

### Cr√©ation d'un document

Pour cr√©er un document, vous devrez faire une demande POST √† l'endpoint `/documents` en incluant le document dans le corps de la demande.

Exemple de demande:
```json
POST /documents HTTP/1.1
Authorization: Bearer your_api_token
Content-Type: application/json

{
  "_type": "post",
  "title": "Mon premier article",
  "slug": {
    _type: "slug",
    current: "mon-premier-article"
  },
  "body": "Ceci est le contenu de mon article."
}
```
### R√©cup√©ration d'un document

Pour r√©cup√©rer un document, vous devrez faire une demande GET √† l'endpoint `/documents/{documentId}` en rempla√ßant `{documentId}` par l'ID du document que vous souhaitez r√©cup√©rer.

Exemple de demande:
```bash
GET /documents/post-slug-mon-premier-article HTTP/1.1
Authorization: Bearer your_api_token
```
### Mise √† jour d'un document

Pour mettre √† jour un document, vous devrez faire une demande PATCH √† l'endpoint `/documents/{documentId}` en rempla√ßant `{documentId}` par l'ID du document que vous souhaitez mettre √† jour. Vous devrez √©galement inclure le document mis √† jour dans le corps de la demande.

Exemple de demande:
```json
PATCH /documents/post-slug-mon-premier-article HTTP/1.1
Authorization: Bearer your_api_token
Content-Type: application/json

{
  "body": "Ceci est la nouvelle version du contenu de mon article."
}
```
### Suppression d'un document

Pour supprimer un document, vous devrez faire une demande DELETE √† l'endpoint `/documents/{documentId}` en rempla√ßant `{documentId}` par l'ID du document que vous souhaitez supprimer.

Exemple de demande:
```bash
DELETE /documents/post-slug-mon-premier-article HTTP/1.1
Authorization: Bearer your_api_token
```
Conclusion
----------

Dans ce guide, nous avons couvert les bases de l'utilisation de l'API Sanity pour g√©rer le contenu de votre site web ou application. Vous devriez maintenant √™tre en mesure de configurer votre projet, vous authentifier, et utiliser les diff√©rentes fonctionnalit√©s de l'API pour cr√©er, lire, mettre √† jour et supprimer des documents.

[üìö.sources]:[

- [Sanity.io Documentation](https://www.sanity.io/docs)
- [Sanity.io API Reference](https://www.sanity.io/docs/http)

]